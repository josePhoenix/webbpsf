language: python

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

python:
    - "2.7"
    - "3.4"
    - "3.5"

env:
  - POPPY_VERSION=development ASTROPY_VERSION=development NUMPY_VERSION=1.8
  - POPPY_VERSION=development ASTROPY_VERSION=stable      NUMPY_VERSION=1.8
  - POPPY_VERSION=development ASTROPY_VERSION=development NUMPY_VERSION=1.9
  - POPPY_VERSION=development ASTROPY_VERSION=stable      NUMPY_VERSION=1.9
  - POPPY_VERSION=development ASTROPY_VERSION=development NUMPY_VERSION=1.10
  - POPPY_VERSION=development ASTROPY_VERSION=stable      NUMPY_VERSION=1.10
  - POPPY_VERSION=stable      ASTROPY_VERSION=development NUMPY_VERSION=1.8
  - POPPY_VERSION=stable      ASTROPY_VERSION=stable      NUMPY_VERSION=1.8
  - POPPY_VERSION=stable      ASTROPY_VERSION=development NUMPY_VERSION=1.9
  - POPPY_VERSION=stable      ASTROPY_VERSION=stable      NUMPY_VERSION=1.9
  - POPPY_VERSION=stable      ASTROPY_VERSION=development NUMPY_VERSION=1.10
  - POPPY_VERSION=stable      ASTROPY_VERSION=stable      NUMPY_VERSION=1.10

matrix:
  fast_finish: true
  allow_failures:
    - env: POPPY_VERSION=stable      ASTROPY_VERSION=development NUMPY_VERSION=1.8
    - env: POPPY_VERSION=stable      ASTROPY_VERSION=stable      NUMPY_VERSION=1.8
    - env: POPPY_VERSION=stable      ASTROPY_VERSION=development NUMPY_VERSION=1.9
    - env: POPPY_VERSION=stable      ASTROPY_VERSION=stable      NUMPY_VERSION=1.9
    - env: POPPY_VERSION=stable      ASTROPY_VERSION=development NUMPY_VERSION=1.10
    - env: POPPY_VERSION=stable      ASTROPY_VERSION=stable      NUMPY_VERSION=1.10

before_install:
  # Use utf8 encoding. Should be default, but this is insurance against
  # future changes
  - export PYTHONIOENCODING=UTF8
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH="$HOME/miniconda2/bin:$PATH"
  - conda update --yes conda

install:
  # CONDA
  - conda create --yes -n test "python=$TRAVIS_PYTHON_VERSION" "numpy=$NUMPY_VERSION" pytest pip Cython jinja2
  - source activate test

  # ASTROPY
  - if [[ $ASTROPY_VERSION == development ]]; then pip install git+http://github.com/astropy/astropy.git#egg=astropy; fi
  - if [[ $ASTROPY_VERSION == stable ]]; then conda install numpy=$NUMPY_VERSION astropy; fi

  # OPTIONAL DEPENDENCIES
  # Here you can add any dependencies your package may have. You can use
  # conda for packages available through conda, or pip for any other
  # packages. You should leave the `numpy=$NUMPY_VERSION` in the `conda`
  # install since this ensures Numpy does not get automatically upgraded.

  # matplotlib and SciPy
  - conda install numpy=$NUMPY_VERSION matplotlib scipy
  # POPPY
  - if [[ $POPPY_VERSION == development ]]; then pip install git+http://github.com/mperrin/poppy.git#egg=poppy; fi
  - if [[ $POPPY_VERSION == stable ]]; then pip install poppy; fi

before_script:
    # Get WebbPSF data files (just a subset of the usual 500 MB!) and set up environment variable
    - wget http://www.stsci.edu/~mperrin/software/webbpsf/minimal-webbpsf-data.tar.gz -O /tmp/minimal-webbpsf-data.tar.gz
    - tar -xzf /tmp/minimal-webbpsf-data.tar.gz
    - export WEBBPSF_PATH="$PWD/webbpsf-data"

script:
   - python setup.py $SETUP_CMD

notifications:
  email:
    - jlong@stsci.edu
